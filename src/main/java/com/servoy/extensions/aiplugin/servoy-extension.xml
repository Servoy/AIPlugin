<?xml version="1.0" encoding="UTF-8" standalone="no"?><servoyextension><servoydoc><plugins><object clientSupport="ng,wc,sc" publicName="ChatClient" qualifiedName="com.servoy.extensions.aiplugin.ChatClient" scriptingName="ChatClient"><description><![CDATA[This is the ChatClient class that wraps around a LLM to chat with it.
It has support for adding files (images, videos, audio, pdf, text) to the chat.]]></description><functions><function clientSupport="ng,wc,sc" name="addBytes"><argumentsTypes><argumentType typecode="[B"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[The this]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Adds a file by bytes to the chat message.
The bytes must be a image/*, video/*, audio/*, application/pdf or text/ content type]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Adds a file by bytes to the chat message.]]></summary></summaries><parameters><parameter name="bytes" type="byte[]" typecode="[B"><description><![CDATA[The bytes of that must be send. The content type will be detected automatically.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="addBytes"><argumentsTypes><argumentType typecode="[B"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[The this]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Adds a file by bytes to the chat message.
The bytes must be a image/*, video/*, audio/*, application/pdf or text/ content type]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Adds a file by bytes to the chat message.]]></summary></summaries><parameters><parameter name="bytes" type="byte[]" typecode="[B"><description><![CDATA[The bytes of that must be send. The content type will be detected automatically.]]></description></parameter><parameter name="contentType" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the content the file, must be a image/*, video/*, audio/*, application/pdf or text/ content type]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="addFile"><argumentsTypes><argumentType typecode="java.lang.Object"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[The this]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Add a file (String or JSFile) to the chat message.
The file must be a image/*, video/*, audio/*, application/pdf or text/ content type
This will be guessed based on the file extension or content.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Add a file (String or JSFile) to the chat message.]]></summary></summaries><parameters><parameter name="file" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.lang.Object"><description><![CDATA[A JSFile or String (path to a file on the server)]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="addFile"><argumentsTypes><argumentType typecode="java.lang.Object"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[The this]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Add a file (String or JSFile) to the chat message.
The file must be a image/*, video/*, audio/*, application/pdf or text/ content type]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Add a file (String or JSFile) to the chat message.]]></summary></summaries><parameters><parameter name="file" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.lang.Object"><description><![CDATA[A JSFile or String (path to a file on the server)]]></description></parameter><parameter name="contentType" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the content the file, must be a image/*, video/*, audio/*, application/pdf or text/ content type]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="chat"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="org.mozilla.javascript.NativePromise" typecode="org.mozilla.javascript.NativePromise"><![CDATA[A promise that will be resolved with the assistant response.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Send a userMessage to the ai. This will return a promise that will be resolved with the response.
This respose is the full string or it will be rejected with an error.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Send a userMessage to the ai.]]></summary></summaries><parameters><parameter name="userMessage" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The user message]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="chat"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="org.mozilla.javascript.Function"/><argumentType typecode="org.mozilla.javascript.Function"/><argumentType typecode="org.mozilla.javascript.Function"/></argumentsTypes><return type="void" typecode="void"/><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Send a userMessage to the ai. This will call the provided functions on partial response, complete response and error.
So this can be used for streaming responses.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Send a userMessage to the ai.]]></summary></summaries><parameters><parameter name="userMessage" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The user message send to the ai.]]></description></parameter><parameter name="partialRespose" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"><description><![CDATA[A function that will be called with each partial response from the ai.]]></description></parameter><parameter name="onComplete" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"><description><![CDATA[A function that will be called when the response is complete with the full response.]]></description></parameter><parameter name="onError" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"><description><![CDATA[A function that will be called when an error occurs.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="EmbeddingClient" qualifiedName="com.servoy.extensions.aiplugin.EmbeddingClient" scriptingName="EmbeddingClient"><description><![CDATA[EmbeddingClient provides methods to generate embeddings for text and manage
embedding stores. It supports in-memory and PostgreSQL (pgvector) embedding
stores.]]></description><functions><function clientSupport="ng,wc,sc" name="createInMemoryStore"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.EmbeddingStore" typecode="com.servoy.extensions.aiplugin.EmbeddingStore"><![CDATA[An EmbeddingStore backed by an in-memory store.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates an in-memory embedding store for storing and retrieving embeddings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates an in-memory embedding store for storing and retrieving embeddings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createPgVectorStore"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.EmbeddingStore" typecode="com.servoy.extensions.aiplugin.EmbeddingStore"><![CDATA[An EmbeddingStore backed by a pgvector store, or null if creation
        fails.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a PostgreSQL (pgvector) embedding store using the specified server
and table. This will drop an existing table if it exists.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a PostgreSQL (pgvector) embedding store using the specified server
and table.]]></summary></summaries><parameters><parameter name="serverName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The name of the Servoy database server.]]></description></parameter><parameter name="tableName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The name of the table to use for storing embeddings.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.j2db.documentation.scripting.docs.Number[]" typecode="[F"><![CDATA[The embedding as a float array, or null if input is empty.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Generates an embedding for a single text string this can be used to use in
the foundset.sort(vectorColumn, embeddingClient.embed("text"), maxRows);]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Generates an embedding for a single text string this can be used to use in
the foundset.]]></summary></summaries><parameters><parameter name="text" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The text string to create embeddings for.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="[Ljava.lang.String;"/></argumentsTypes><return type="org.mozilla.javascript.NativePromise" typecode="org.mozilla.javascript.NativePromise"><![CDATA[A Promise resolving to a float array of embeddings, or null if input
        is empty.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Generates embeddings for an array of text strings asynchronously.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Generates embeddings for an array of text strings asynchronously.]]></summary></summaries><parameters><parameter name="texts" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"><description><![CDATA[The array of text strings to embed.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embedAll" varargs="true"><argumentsTypes><argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/><argumentType typecode="java.lang.String"/><argumentType typecode="[Ljava.lang.String;"/></argumentsTypes><return type="org.mozilla.javascript.NativePromise" typecode="org.mozilla.javascript.NativePromise"><![CDATA[A Promise resolving with the given foundset when embeddings are
        stored, or rejects on error.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Generates embeddings for all records in the specified foundset for the given
textColumns and stores them in the specified vector column.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Generates embeddings for all records in the specified foundset for the given
textColumns and stores them in the specified vector column.]]></summary></summaries><parameters><parameter name="foundset" type="com.servoy.j2db.dataprocessing.FoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/><parameter name="vectorColumn" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/><parameter name="textColumns" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/></parameters></function><function clientSupport="ng,wc,sc" name="getDimension"><argumentsTypes/><return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[The embeddings model dimension.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Gets the dimension of the embeddings produced by the model. This can be used
when createing a vector column in a database, to use as the "size" of the
vector.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Gets the dimension of the embeddings produced by the model.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="openPgVectorStore"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.EmbeddingStore" typecode="com.servoy.extensions.aiplugin.EmbeddingStore"><![CDATA[An EmbeddingStore backed by a pgvector store, or null if creation
        fails.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Opens a PostgreSQL (pgvector) embedding store using the specified server and
table. This will not drop an existing table.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Opens a PostgreSQL (pgvector) embedding store using the specified server and
table.]]></summary></summaries><parameters><parameter name="serverName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The name of the Servoy database server.]]></description></parameter><parameter name="tableName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The name of the table to use for storing embeddings.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="EmbeddingStore" qualifiedName="com.servoy.extensions.aiplugin.EmbeddingStore" scriptingName="EmbeddingStore"><description><![CDATA[EmbeddingStore provides methods to embed text data and perform similarity search using embeddings.
It supports asynchronous embedding and blocking search, and can be backed by various embedding store implementations.]]></description><functions><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="java.lang.Object"/><argumentType typecode="int"/><argumentType typecode="int"/></argumentsTypes><return type="void" typecode="void"/><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Embeds a PDF document by splitting it into paragraphs of specified size and overlap
The text segments are stored in the embedding store and will get metadata from the pdf and if possible also the name of the PDF is set if that is known.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Embeds a PDF document by splitting it into paragraphs of specified size and overlap
The text segments are stored in the embedding store and will get metadata from the pdf and if possible also the name of the PDF is set if that is known.]]></summary></summaries><parameters><parameter name="pdfSource" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.lang.Object"><description><![CDATA[This can be JSFile or String represeting a file path, or byte[] representing the PDF content.]]></description></parameter><parameter name="maxSegmentSizeInChars" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><description><![CDATA[How many characters per segment we can have.]]></description></parameter><parameter name="maxOverlapSizeInChars" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><description><![CDATA[How many characters of overlap between segments.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="java.lang.Object"/><argumentType typecode="int"/><argumentType typecode="int"/><argumentType typecode="java.util.Map"/></argumentsTypes><return type="void" typecode="void"/><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Embeds a PDF document by splitting it into paragraphs of specified size and overlap, with metadata.
The text segments are stored in the embedding store and will get metadata from the pdf and if possible also the name of the PDF is set if that is known.
Also additional metadata can be provided that will be attached to each segment.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Embeds a PDF document by splitting it into paragraphs of specified size and overlap, with metadata.]]></summary></summaries><parameters><parameter name="pdfSource" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.lang.Object"><description><![CDATA[This can be JSFile or String represeting a file path, or byte[] representing the PDF content.]]></description></parameter><parameter name="maxSegmentSizeInChars" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><description><![CDATA[How many characters per segment we can have.]]></description></parameter><parameter name="maxOverlapSizeInChars" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><description><![CDATA[How many characters of overlap between segments.]]></description></parameter><parameter name="metaData" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><description><![CDATA[Metadata to attach to each segment.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="[Ljava.lang.String;"/></argumentsTypes><return type="void" typecode="void"/><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Asynchronously embeds an array of text data using the configured model and stores the results.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Asynchronously embeds an array of text data using the configured model and stores the results.]]></summary></summaries><parameters><parameter name="data" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"><description><![CDATA[The array of text strings to embed.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="embed"><argumentsTypes><argumentType typecode="[Ljava.lang.String;"/><argumentType typecode="[Ljava.util.Map;"/></argumentsTypes><return type="void" typecode="void"/><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Asynchronously embeds an array of text data with optional metadata and stores the results.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Asynchronously embeds an array of text data with optional metadata and stores the results.]]></summary></summaries><parameters><parameter name="data" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"><description><![CDATA[The array of text strings to embed.]]></description></parameter><parameter name="metaData" type="com.servoy.j2db.documentation.scripting.docs.Object[]" typecode="[Ljava.util.Map;"><description><![CDATA[An array of metadata maps, one for each text string (may be null).]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="search"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="int"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.SearchResult[]" typecode="[Lcom.servoy.extensions.aiplugin.SearchResult;"><![CDATA[An array of SearchResult objects representing the best matches.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Performs a blocking similarity search for the given text, returning the best matches from the store.
Waits for all ongoing embedding operations to complete before searching.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Performs a blocking similarity search for the given text, returning the best matches from the store.]]></summary></summaries><parameters><parameter name="text" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The query text to search for.]]></description></parameter><parameter name="maxResults" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><description><![CDATA[The maximum number of results to return.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="GeminiChatBuilder" qualifiedName="com.servoy.extensions.aiplugin.GeminiChatBuilder" scriptingName="GeminiChatBuilder"><description><![CDATA[GeminiChatBuilder is a builder for configuring and creating Gemini chat clients.
Allows setting API key, model name, temperature, and memory token limits for the Gemini model.]]></description><functions><function clientSupport="ng,wc,sc" name="apiKey"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiChatBuilder" typecode="com.servoy.extensions.aiplugin.GeminiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini API key.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini API key.]]></summary></summaries><parameters><parameter name="key" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The API key.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="build"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[A configured ChatClient instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Builds and returns a ChatClient configured with the specified Gemini model settings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Builds and returns a ChatClient configured with the specified Gemini model settings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createTool"><argumentsTypes><argumentType typecode="org.mozilla.javascript.Function"/><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ToolBuilder" typecode="com.servoy.extensions.aiplugin.ToolBuilder"><![CDATA[a ToolBuilder instance for further configuration]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a new ToolBuilder for defining a custom tool for the AI agent.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a new ToolBuilder for defining a custom tool for the AI agent.]]></summary></summaries><parameters><parameter name="toolFunction" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"><description><![CDATA[the function representing the tool's logic]]></description></parameter><parameter name="name" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the name of the tool]]></description></parameter><parameter name="description" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the description of the tool]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="maxMemoryTokens"><argumentsTypes><argumentType typecode="java.lang.Integer"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiChatBuilder" typecode="com.servoy.extensions.aiplugin.GeminiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the maximum number of memory tokens for chat history.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the maximum number of memory tokens for chat history.]]></summary></summaries><parameters><parameter name="tokens" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Integer"><description><![CDATA[The maximum number of tokens.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="modelName"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiChatBuilder" typecode="com.servoy.extensions.aiplugin.GeminiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini model name.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini model name.]]></summary></summaries><parameters><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The model name.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="temperature"><argumentsTypes><argumentType typecode="java.lang.Double"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiChatBuilder" typecode="com.servoy.extensions.aiplugin.GeminiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the temperature for the Gemini model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the temperature for the Gemini model.]]></summary></summaries><parameters><parameter name="temperature" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Double"><description><![CDATA[The temperature value.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="useBuildInTools"><argumentsTypes><argumentType typecode="boolean"/></argumentsTypes><return type="T" typecode="T"><![CDATA[This builder instance for chaining.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Injects the built-in Servoy tools (such as user info) into the AI agent.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Injects the built-in Servoy tools (such as user info) into the AI agent.]]></summary></summaries><parameters><parameter name="useBuildInTools" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><description><![CDATA[Boolean to indicate whether to use built-in tools.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="GeminiEmbeddingBuilder" qualifiedName="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder" scriptingName="GeminiEmbeddingBuilder"><description><![CDATA[GeminiEmbeddingBuilder is a builder for configuring and creating Gemini embedding clients.
Allows setting API key and model name for the Gemini embedding model.]]></description><functions><function clientSupport="ng,wc,sc" name="apiKey"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini API key for the embedding model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini API key for the embedding model.]]></summary></summaries><parameters><parameter name="key" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The API key.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="build"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.EmbeddingClient" typecode="com.servoy.extensions.aiplugin.EmbeddingClient"><![CDATA[A configured EmbeddingClient instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Builds and returns an EmbeddingClient configured with the specified Gemini embedding model settings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Builds and returns an EmbeddingClient configured with the specified Gemini embedding model settings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="modelName"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini model name for the embedding model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the Gemini model name for the embedding model.]]></summary></summaries><parameters><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The model name.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="OpenAiChatBuilder" qualifiedName="com.servoy.extensions.aiplugin.OpenAiChatBuilder" scriptingName="OpenAiChatBuilder"><description><![CDATA[OpenAiChatBuilder is a builder for configuring and creating OpenAI chat clients.
Allows setting API key, model name, temperature, and memory token limits for the OpenAI model.]]></description><functions><function clientSupport="ng,wc,sc" name="apiKey"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiChatBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI API key.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI API key.]]></summary></summaries><parameters><parameter name="key" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The API key.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="build"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[A configured ChatClient instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Builds and returns a ChatClient configured with the specified OpenAI model settings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Builds and returns a ChatClient configured with the specified OpenAI model settings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createTool"><argumentsTypes><argumentType typecode="org.mozilla.javascript.Function"/><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ToolBuilder" typecode="com.servoy.extensions.aiplugin.ToolBuilder"><![CDATA[a ToolBuilder instance for further configuration]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a new ToolBuilder for defining a custom tool for the AI agent.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a new ToolBuilder for defining a custom tool for the AI agent.]]></summary></summaries><parameters><parameter name="toolFunction" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"><description><![CDATA[the function representing the tool's logic]]></description></parameter><parameter name="name" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the name of the tool]]></description></parameter><parameter name="description" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the description of the tool]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="maxMemoryTokens"><argumentsTypes><argumentType typecode="java.lang.Integer"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiChatBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the maximum number of memory tokens for chat history.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the maximum number of memory tokens for chat history.]]></summary></summaries><parameters><parameter name="tokens" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Integer"><description><![CDATA[The maximum number of tokens.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="modelName"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiChatBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI model name.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI model name.]]></summary></summaries><parameters><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The model name.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="temperature"><argumentsTypes><argumentType typecode="java.lang.Double"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiChatBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiChatBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the temperature for the OpenAI model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the temperature for the OpenAI model.]]></summary></summaries><parameters><parameter name="temperature" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Double"><description><![CDATA[The temperature value.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="useBuildInTools"><argumentsTypes><argumentType typecode="boolean"/></argumentsTypes><return type="T" typecode="T"><![CDATA[This builder instance for chaining.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Injects the built-in Servoy tools (such as user info) into the AI agent.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Injects the built-in Servoy tools (such as user info) into the AI agent.]]></summary></summaries><parameters><parameter name="useBuildInTools" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><description><![CDATA[Boolean to indicate whether to use built-in tools.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="OpenAiEmbeddingBuilder" qualifiedName="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder" scriptingName="OpenAiEmbeddingBuilder"><description><![CDATA[OpenAiEmbeddingBuilder is a builder for configuring and creating OpenAI embedding clients.
Allows setting API key and model name for the OpenAI embedding model.]]></description><functions><function clientSupport="ng,wc,sc" name="apiKey"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI API key for the embedding model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI API key for the embedding model.]]></summary></summaries><parameters><parameter name="key" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The API key.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="build"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.EmbeddingClient" typecode="com.servoy.extensions.aiplugin.EmbeddingClient"><![CDATA[A configured EmbeddingClient instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Builds and returns an EmbeddingClient configured with the specified OpenAI embedding model settings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Builds and returns an EmbeddingClient configured with the specified OpenAI embedding model settings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="modelName"><argumentsTypes><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder"><![CDATA[This builder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI model name for the embedding model.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Sets the OpenAI model name for the embedding model.]]></summary></summaries><parameters><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The model name.]]></description></parameter></parameters></function></functions></object><object clientSupport="ng,wc,sc" publicName="SearchResult" qualifiedName="com.servoy.extensions.aiplugin.SearchResult" scriptingName="SearchResult"><description><![CDATA[SearchResult represents a single result from an embedding similarity search.
Contains the similarity score, matched text, and associated metadata.]]></description></object><object clientSupport="ng,wc,sc" publicName="ToolBuilder" qualifiedName="com.servoy.extensions.aiplugin.ToolBuilder" scriptingName="ToolBuilder"><description><![CDATA[ToolBuilder is a builder class for constructing AI tool specifications with parameter definitions.
<p>
This class allows dynamic creation of tool specifications for AI agents, supporting string, number, and boolean parameters.
It is designed to be used in scripting environments and integrates with Servoy's documentation system.
<p>
Usage example:
<pre>
ToolBuilder builder = new ToolBuilder(chatBuilder, toolFunction, "toolName", "Tool description");
builder.addStringParameter("param1", "Description", true)
       .addNumberParameter("param2", "Description", false)
       .build();
</pre>]]></description><functions><function clientSupport="ng,wc,sc" name="addBooleanParameter"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/><argumentType typecode="boolean"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ToolBuilder" typecode="com.servoy.extensions.aiplugin.ToolBuilder"><![CDATA[this ToolBuilder instance for chaining]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Adds a boolean parameter to the tool specification.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Adds a boolean parameter to the tool specification.]]></summary></summaries><parameters><parameter name="name" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter name]]></description></parameter><parameter name="description" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter description]]></description></parameter><parameter name="required" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><description><![CDATA[whether the parameter is required]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="addNumberParameter"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/><argumentType typecode="boolean"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ToolBuilder" typecode="com.servoy.extensions.aiplugin.ToolBuilder"><![CDATA[this ToolBuilder instance for chaining]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Adds a number parameter to the tool specification.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Adds a number parameter to the tool specification.]]></summary></summaries><parameters><parameter name="name" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter name]]></description></parameter><parameter name="description" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter description]]></description></parameter><parameter name="required" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><description><![CDATA[whether the parameter is required]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="addStringParameter"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/><argumentType typecode="boolean"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ToolBuilder" typecode="com.servoy.extensions.aiplugin.ToolBuilder"><![CDATA[this ToolBuilder instance for chaining]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Adds a string parameter to the tool specification.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Adds a string parameter to the tool specification.]]></summary></summaries><parameters><parameter name="name" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter name]]></description></parameter><parameter name="description" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[the parameter description]]></description></parameter><parameter name="required" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><description><![CDATA[whether the parameter is required]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="build"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.BaseChatBuilder" typecode="com.servoy.extensions.aiplugin.BaseChatBuilder"><![CDATA[the chat builder instance]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Finalizes the tool specification and returns the chat builder.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Finalizes the tool specification and returns the chat builder.]]></summary></summaries></function></functions></object><object clientSupport="ng,wc,sc" publicName="ai" qualifiedName="com.servoy.extensions.aiplugin.AIProvider" scriptingName="plugins.ai"><description><![CDATA[AIProvider class that provides access to create AI chat and embedding clients/builders.]]></description><functions><function clientSupport="ng,wc,sc" name="createGeminiChatBuilder"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.GeminiChatBuilder" typecode="com.servoy.extensions.aiplugin.GeminiChatBuilder"><![CDATA[GeminiChatBuilder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a builder for Gemini chat models.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a builder for Gemini chat models.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createGeminiClient"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[ChatClient instance for Gemini.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a Gemini chat client using the provided API key and model name.
This is a quick way to create a client without using the builder.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a Gemini chat client using the provided API key and model name.]]></summary></summaries><parameters><parameter name="apiKey" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The Gemini API key.]]></description></parameter><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The Gemini model name.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="createGeminiEmbeddedBuilder"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.GeminiEmbeddingBuilder"><![CDATA[GeminiEmbeddingBuilder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a builder for Gemini embeddings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a builder for Gemini embeddings.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createOpenAIClient"><argumentsTypes><argumentType typecode="java.lang.String"/><argumentType typecode="java.lang.String"/></argumentsTypes><return type="com.servoy.extensions.aiplugin.ChatClient" typecode="com.servoy.extensions.aiplugin.ChatClient"><![CDATA[ChatClient instance for OpenAI.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates an OpenAI chat client using the provided API key and model name.
This is a quick way to create a client without using the builder.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates an OpenAI chat client using the provided API key and model name.]]></summary></summaries><parameters><parameter name="apiKey" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The OpenAI API key.]]></description></parameter><parameter name="modelName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><description><![CDATA[The OpenAI model name.]]></description></parameter></parameters></function><function clientSupport="ng,wc,sc" name="createOpenAiChatBuilder"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.OpenAiChatBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiChatBuilder"><![CDATA[OpenAiChatBuilder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a builder for OpenAI chat models.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a builder for OpenAI chat models.]]></summary></summaries></function><function clientSupport="ng,wc,sc" name="createOpenAiEmbeddedBuilder"><argumentsTypes/><return type="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder" typecode="com.servoy.extensions.aiplugin.OpenAiEmbeddingBuilder"><![CDATA[OpenAiEmbeddingBuilder instance.]]></return><descriptions><description clientSupport="ng,wc,sc"><![CDATA[Creates a builder for OpenAI embeddings.]]></description></descriptions><summaries><summary clientSupport="ng,wc,sc"><![CDATA[Creates a builder for OpenAI embeddings.]]></summary></summaries></function></functions></object></plugins></servoydoc></servoyextension>